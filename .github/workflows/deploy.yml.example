# .github/workflows/deploy.yml
# Optional: Automated CI/CD pipeline
# Uncomment and configure if you want automated deployments

name: Deploy Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: poker_planning_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Install dependencies
        working-directory: ./back_end
        run: go mod download
      
      - name: Run tests
        working-directory: ./back_end
        run: go test -v ./...
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: poker_planning_test

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./front_end/package-lock.json
      
      - name: Install dependencies
        working-directory: ./front_end
        run: npm ci
      
      - name: Lint
        working-directory: ./front_end
        run: npm run lint
      
      - name: Build
        working-directory: ./front_end
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: http://localhost:8080

  # Uncomment to enable automated deployment to Fly.io
  # deploy-backend:
  #   name: Deploy Backend to Fly.io
  #   needs: [test-backend]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   
  #   steps:
  #     - uses: actions/checkout@v3
  #     
  #     - uses: superfly/flyctl-actions/setup-flyctl@master
  #     
  #     - name: Deploy to Fly.io
  #       working-directory: ./back_end
  #       run: flyctl deploy --remote-only
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  # Note: Vercel automatically deploys from Git when connected
  # No manual deployment step needed for frontend
